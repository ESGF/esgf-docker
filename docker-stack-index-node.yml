# required env variables:
#
# ESGF_CONFIG : points to the root ESGF configuration directory
#       example: export ESGF_CONFIG=/Users/cinquini/ESGF_CONFIG
# ESGF_HOSTNAME: HostName or IP address for apache httpd front-end server
#       example: export ESGF_HOSTNAME=my-node.esgf.org
#       example: export ESGF_HOSTNAME=`docker-machine ip`
# ESGF_VERSION: version of ESGF/Docker distribution
#       example: export ESGF_VERSION=1.2
# SOLR_DATA: location of Solr index
#       example: export SOLR_DATA=/esg/solr-index

# service stack:
# - front_node: httpd daemon (and container visualizer)
# - index_node: esgf-search web application runnning within Tomcat
# - solr_node: solr search engine running within Jetty

version: '3.3'

configs:
          #################### HTTPD CONFIGS ##################
  httpd_esgf-httpd_conf:
    file: $ESGF_CONFIG/httpd/conf/esgf-httpd.conf

secrets:
            #################### TOMCAT SECRETS #################
  tomcat_esg-truststore_ts:
    file: $ESGF_CONFIG/esg/config/tomcat/esg-truststore.ts
          #################### HTTPD SECRETS ##################
  httpd_cachain_pem:
    file: $ESGF_CONFIG/httpd/certs/cachain.pem
  httpd_esgf-ca-bundle_crt:
    file: $ESGF_CONFIG/httpd/certs/esgf-ca-bundle.crt
  httpd_esgf-ca-bundle_crt-orig:
    file: $ESGF_CONFIG/httpd/certs/esgf-ca-bundle.crt-orig
  httpd_hostcert_pem:
    file: $ESGF_CONFIG/httpd/certs/hostcert.pem
  httpd_hostcert_pkcs12:
    file: $ESGF_CONFIG/httpd/certs/hostcert.pkcs12
  httpd_hostkey_pem:
    file: $ESGF_CONFIG/httpd/certs/hostkey.pem


services:

  esgf-solr:
    image: esgfhub/esgf-solr:${ESGF_VERSION}
    ports:
      - "8983:8983"
      - "8984:8984" 
    volumes:
     # use solr index on Docker volume
     - solr_data:/esg/solr-index
     # use Solr index on host partition
     #- $SOLR_DATA:/esg/solr-index
    networks:
      - default
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.esgf_type == solr_node]

  esgf-index-node:
    image: esgfhub/esgf-index-node:${ESGF_VERSION}
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      - esgf-solr
    secrets:
      - source: tomcat_esg-truststore_ts
        target: /usr/java/latest/jre/lib/security/jssecacerts
    volumes:
     - $ESGF_CONFIG/esg/config/:/esg/config/ # TODO: secret&config
    networks:
      - default
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.esgf_type == index_node]

  esgf-httpd:
   image: esgfhub/esgf-httpd:${ESGF_VERSION}
   entrypoint: /usr/local/bin/docker-entrypoint.sh
   configs:
      - source: httpd_esgf-httpd_conf
        target: /etc/httpd/conf.d/esgf-httpd.conf
   secrets:
      - source: httpd_cachain_pem
        target: /etc/certs/cachain.pem
      - source: httpd_esgf-ca-bundle_crt
        target: /etc/certs/esgf-ca-bundle.crt
      - source: httpd_esgf-ca-bundle_crt-orig
        target: /etc/certs/esgf-ca-bundle.crt-orig
      - source: httpd_hostcert_pem
        target: /etc/certs/hostcert.pem
      - source: httpd_hostcert_pkcs12
        target: /etc/certs/hostcert.pkcs12
      - source: httpd_hostkey_pem
        target: /etc/certs/hostkey.pem
   volumes:
     - $ESGF_CONFIG/grid-security/certificates/:/etc/grid-security/certificates/ # TODO: secret
   ports:
     - "80:80"
     - "443:443"
   # httpd URLs must use hostname=$ESGF_HOSTNAME
   networks:
     default:
       aliases:
         - "${ESGF_HOSTNAME}"
   deploy:
      replicas: 1
      placement:
        constraints: [node.labels.esgf_type == front_node]

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "9080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

# use Docker volumes to store persistent data
# (which survives when the containers are removed)
volumes:
  # contains Solr index data
  solr_data:
