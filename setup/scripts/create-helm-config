#!/bin/bash

set -eo pipefail

source "$(dirname "$(realpath "$0")")/functions.sh"

#####
## This script creates YAML files for use with the esgf-helm Helm chart
#####

HELM="/esg/helm"
YAML_FILE="$HELM/values.yaml"
CERTS="/esg/certificates"
SECRETS="/esg/secrets"

info "Writing $YAML_FILE for use with esgf-helm chart"

[ -z "$ESGF_HOSTNAME" ] && error "ESGF_HOSTNAME must be set"

mkdir -p "$HELM"

function indent {
    # This function applies the specified indent to lines from stdin and writes
    # back to stdout
    while read -r line; do
        # First echo same spaces, but no newline
        echo -n "$(head -c $1 < /dev/zero | tr "\0" " ")"
        # Then echo the line
        echo "$line"
    done
}

# First write the hostname
echo "hostname: $ESGF_HOSTNAME" > "$YAML_FILE"
echo "" >> "$YAML_FILE"

# Write the certificates YAML file
info "  Writing certificates"
echo "certificates:" >> "$YAML_FILE"
echo "  esg-trust-bundle.pem: |" >> "$YAML_FILE"
cat "$CERTS/esg-trust-bundle.pem" | indent 4 >> "$YAML_FILE"
echo "  hostcert.crt: |" >> "$YAML_FILE"
cat "$CERTS/hostcert/hostcert.crt" | indent 4 >> "$YAML_FILE"
echo "  hostcert.key: |" >> "$YAML_FILE"
cat "$CERTS/hostcert/hostcert.key" | indent 4 >> "$YAML_FILE"
echo "  slcsca.crt: |" >> "$YAML_FILE"
cat "$CERTS/slcsca/ca.crt" | indent 4 >> "$YAML_FILE"
echo "  slcsca.key: |" >> "$YAML_FILE"
cat "$CERTS/slcsca/ca.key" | indent 4 >> "$YAML_FILE"
#esg-hostcert-bundle.p12
#esg-trust-bundle.jks
echo "" >> "$YAML_FILE"

# Write the secrets YAML file
info "  Writing secrets"
echo "secrets:" >> "$YAML_FILE"
for file in $(find "$SECRETS" -type f); do
    echo "  ${file#"$SECRETS/"}: $(cat "$file")" >> "$YAML_FILE"
done

info "Done"
