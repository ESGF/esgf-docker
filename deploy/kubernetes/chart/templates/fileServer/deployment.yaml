{{- $fileServer := .Values.data.fileServer -}}
{{- $accessLogSidecar := .Values.data.accessLogSidecar -}}
{{- if (and .Values.data.enabled $fileServer.enabled) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "esgf.component.fullname" (list . "fileServer") }}
  labels: {{ include "esgf.component.labels" (list . "fileServer" $fileServer.labels) | nindent 4 }}
spec:
  {{- if not $fileServer.hpa }}
  replicas: {{ $fileServer.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{ include "esgf.component.selectorLabels" (list . "fileServer") | nindent 6 }}
  template:
    metadata:
      labels: {{ include "esgf.component.selectorLabels" (list . "fileServer") | nindent 8 }}
      # Force deployment to roll if the config changes
      # https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/fileServer/configmap.yaml") . | sha256sum }}
        {{- if $accessLogSidecar.enabled }}
        # When the access log sidecar is enabled, roll the deployment if the logstash pipelines or certificates change
        checksum/logstash-pipelines: {{ include (print $.Template.BasePath "/logstash/pipelines.yaml") . | sha256sum }}
        checksum/logstash-certs: {{ include (print $.Template.BasePath "/logstash/certs.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- with (default .Values.image.pullSecrets $fileServer.image.pullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.data.podSecurityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        # If the access log sidecar is enabled, create a named pipe for the access log so it can be separated
        # Continue to send the rest of the logs to stdout
        {{- if $accessLogSidecar.enabled }}
        - name: make-log-pipes
          {{ include "esgf.deployment.image" (list . $fileServer.image) }}
          args:
            # Continue to send the error log to stderr, but send the access log to a named pipe
            - bash
            - -c
            - |
              set -ex
              ln -sf /dev/stderr /var/log/nginx/error.log
              rm -f /var/log/nginx/access.log && mkfifo /var/log/nginx/access.log
          {{- with .Values.data.securityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: nginx-logs
              mountPath: /var/log/nginx
        {{- end }}
        {{- with $fileServer.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: file-server
          {{ include "esgf.deployment.image" (list . $fileServer.image) }}
          resources: {{ toYaml $fileServer.resources | nindent 12 }}
          ports:
            - name: http
              containerPort: 8080
          env: {{ toYaml $fileServer.extraEnv | nindent 12 }}
          readinessProbe: &probe
            httpGet:
              path: /
              port: 8080
              httpHeaders:
                - name: Host
                  value: healthz.local
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            <<: *probe
            initialDelaySeconds: 300
          {{- with .Values.data.securityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
              readOnly: true
            # The shared log volume is only required if the access log sidecar is enabled
            {{- if $accessLogSidecar.enabled }}
            - name: nginx-logs
              mountPath: /var/log/nginx
            {{- end }}
            # In order to use a read-only root filesystem, we mount emptyDirs in places
            # where files are expected to change
            - name: nginx-cache
              mountPath: /var/lib/nginx/tmp
            - name: nginx-run
              mountPath: /run/nginx
            {{- include "esgf.data.volumeMounts" . | nindent 12 }}
            {{- with $fileServer.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        # If the access log sidecar is enabled, run the sidecar pod
        {{- if $accessLogSidecar.enabled }}
        - name: file-server-access-log
          {{ include "esgf.deployment.image" (list . $accessLogSidecar.image) }}
          env:
            - name: ACCESS_LOG_FILE
              value: /var/log/nginx/access.log
            - name: EXTERNAL_HOSTNAME
              value: "{{ .Values.hostname }}"
          resources: {{ toYaml $accessLogSidecar.resources | nindent 12 }}
          {{- with .Values.data.securityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: logstash-conf
              mountPath: /etc/logstash/conf.d
            - name: logstash-certs
              mountPath: /etc/logstash/certs
            - name: nginx-logs
              mountPath: /var/log/nginx
            - name: logstash-data
              mountPath: /usr/share/logstash/data
            - name: logstash-tmp
              mountPath: /tmp/logstash
        {{- end }}
      {{- with $fileServer.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $fileServer.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $fileServer.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ include "esgf.component.fullname" (list . "fileServer") }}
        # In order to use a read-only root filesystem, we mount emptyDirs in places
        # where files are expected to change
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        # These volumes are only required if the access log sidecar is enabled
        {{- if $accessLogSidecar.enabled }}
        # Each pod gets a directory to hold the named pipes for the logs
        - name: nginx-logs
          emptyDir: {}
        # Logstash config is in a secret
        - name: logstash-conf
          secret:
            secretName: {{ include "esgf.component.fullname" (list . "logstash-pipelines") }}
        # As are any certificates that are required
        - name: logstash-certs
          secret:
            secretName: {{ include "esgf.component.fullname" (list . "logstash-certs") }}
        # Logstash also needs a tmp dir and a data dir
        - name: logstash-data
          emptyDir: {}
        - name: logstash-tmp
          emptyDir: {}
        {{- end }}
        {{- include "esgf.data.volumes" . | nindent 8 }}
        {{- with $fileServer.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end -}}
