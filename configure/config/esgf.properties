# hostname
esgf.host={{ getenv "ESGF_HOSTNAME" }}
# peer group
node.peer.group={{ getenv "ESGF_PEER_GROUP" }}
# IdP
idp.security.attribute.service.app.home=/usr/local/tomcat/webapps/esgf-idp
idp.security.attribute.service.endpoint={{ getenv "ESGF_ATTRIBUTE_SERVICE_ENDPOINT" }}
idp.security.registration.service.app.home=/usr/local/tomcat/webapps/esgf-idp
idp.security.registration.service.endpoint={{ getenv "ESGF_REGISTRATION_SERVICE_ENDPOINT" }}
idp.service.app.home=/usr/local/tomcat/webapps/esgf-idp
idp.service.endpoint={{ getenv "ESGF_OPENID_ENDPOINT" }}
#myproxy.app.home=/usr/local/globus/sbin/myproxy-server
#myproxy.dn=/O=ESGF/OU=my.esgf.node:8080/CN=host/my.esgf.node
#myproxy.endpoint=my.esgf.node:8080
#myproxy.port=7512
# postgres connection parameters
db.managed=no
db.driver=org.postgresql.Driver
db.protocol=jdbc:postgresql:
db.host={{ getenv "ESGF_DATABASE_HOST" }}
db.port={{ getenv "ESGF_DATABASE_PORT" }}
db.user={{ getenv "ESGF_DATABASE_USER" }}
db.password={{ getenv "ESGF_DATABASE_PASSWORD" }}
db.database={{ getenv "ESGF_DATABASE_NAME" }}
# esg-orp
orp.provider.list=/esg/config/esgf_known_providers.xml
# esg-search
index.service.app.home=/usr/local/tomcat/webapps/esg-search
index.service.endpoint={{ getenv "ESGF_SEARCH_SERVICE_ENDPOINT" }}
esgf.index.peer={{ getenv "ESGF_INDEX_PEER" }}
esgf.idp.peer={{ getenv "ESGF_IDP_PEER" }}
publishing.service.app.home=/usr/local/tomcat/webapps/esg-search
publishing.service.endpoint={{ getenv "ESGF_PUBLISH_SERVICE_ENDPOINT" }}
esg.search.solr.query.url={{ getenv "ESGF_SOLR_QUERY_URL" }}
esg.search.solr.publish.url={{ getenv "ESGF_SOLR_PUBLISH_URL" }}
# security
security.authz.service.endpoint={{ getenv "ESGF_AUTHORIZATION_SERVICE_ENDPOINT" }}
# node manager
esgf.registration.xml.download.url={{ getenv "ESGF_REGISTRATION_XML_URL" | default "http://dist.ceda.ac.uk/esgf/dist/devel/lists/registration.xml" }}
esgf.registration.xml.path=/usr/local/esgf-dashboard-ip/bin/
# dashboard
dashboard.ip.app.home=/usr/local/esgf-dashboard-ip
dashboard.service.app.home=/usr/local/tomcat/webapps/esgf-dashboard
# short lived certificate server
short.lived.certificate.server={{ getenv "ESGF_SLCS_ENDPOINT" }}
