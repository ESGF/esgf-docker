# Nginx configuration for the ESGF proxy

# Use upstreams rather than embedding URLs in the location blocks to prevent
# Nginx caching the IPs at startup time
# This allows the containers to restart and pick up new IPs without breaking
# the proxy
upstream esgf_solr {
    server ${ESGF_SOLR_UPSTREAM};
}
upstream esgf_index_node {
    server ${ESGF_INDEX_NODE_UPSTREAM};
}
upstream esgf_tds {
    server ${ESGF_TDS_UPSTREAM};
}
upstream esgf_cog {
    server ${ESGF_COG_UPSTREAM};
}
upstream esgf_orp {
    server ${ESGF_ORP_UPSTREAM};
}
upstream esgf_idp {
    server ${ESGF_IDP_UPSTREAM};
}
# upstream esgf_slcs {
#     server ${ESGF_SLCS_UPSTREAM};
# }
# upstream esgf_auth {
#     server ${ESGF_AUTH_UPSTREAM};
# }


server {
    server_name ${ESGF_HOSTNAME};
    listen 80;

    # Unless there is a more specific match, redirect to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    proxy_set_header  Host $http_host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;

    # Proxy some specific requests that are allowed for plain HTTP
    location /solr {
        proxy_pass http://esgf_solr;
    }
    location /esg-search {
        proxy_pass http://esgf_index_node;
    }
    location /thredds {
        proxy_pass http://esgf_tds;
    }
}


server {
    server_name ${ESGF_HOSTNAME};
    listen 443 ssl;

    ssl_certificate     ${ESGF_PROXY_SSL_CERT_FILE};
    ssl_certificate_key ${ESGF_PROXY_SSL_KEY_FILE};

    # SSL configuration from Mozilla SSL config generator
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Enables server-side protection from BEAST attacks
    # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    ssl_prefer_server_ciphers on;

    # Disable SSLv3 since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    ssl_stapling on;
    ssl_stapling_verify on;

    # Enable HSTS (HTTP Strict Transport Security) to avoid ssl stripping
    # https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    # 15768000 seconds = 6 months
    add_header Strict-Transport-Security max-age=15768000;

    # Client certificate verification
    # ssl_verify_client optional;
    # ssl_client_certificate /etc/nginx/certs/ca.crt;

    proxy_set_header  Host $http_host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;

    # All requests except those with more specific matches go to CoG
    location / {
        proxy_pass http://esgf_cog;
    }
    location /solr {
        proxy_pass http://esgf_solr;
    }
    location /esg-orp {
        proxy_pass http://esgf_orp;
    }
    location /esgf-idp {
        proxy_pass http://esgf_idp;
    }
    location /esg-search {
        proxy_pass http://esgf_index_node;
    }
    location /thredds {
        proxy_pass http://esgf_tds;
    }
#    location /esgf-slcs {
#        proxy_pass http://esgf_slcs;
#    }
#    location /esgf-auth {
#        proxy_pass http://esgf_auth;
#    }
}
